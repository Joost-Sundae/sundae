import { TransactionApi, TransactionCommittedDetailsResponse, TransactionStatusResponse } from '../generated';
export declare class Transaction {
    innerClient: TransactionApi;
    constructor(innerClient: TransactionApi);
    /**
     * Get transaction status for given transaction id. Possible transaction statuses are: Unknown, CommittedSuccess, CommittedFailure, Pending, Rejected
     *
     * @example
     * const txStatusResponse = await gatewayApi.transaction.getStatus('266cdfe0a28a761909d04761cdbfe33555ee5fdcf1db37fcf71c9a644b53e60b')
     * console.log(txStatusResponse.status)
     */
    getStatus(transactionIntentHashHex: string): Promise<TransactionStatusResponse>;
    /**
     * Get details of committed transaction together with ledger state at a time of commit. This will trigger two API requests, first to get transaction details and second to get ledger state at a time of commit.
     */
    getCommittedDetails(transactionIntentHashHex: string): Promise<TransactionCommittedDetailsResponse>;
}
